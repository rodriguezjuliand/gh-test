name: Deploy Infra ACR, AKS
on: 
  workflow_call:

jobs:
  #...DeployAZ...
  DeployResourceAz:
    name: Deploy Resource AZ
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Replace Token in .sh
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '{'
          tokenSuffix: '}'
          files: '**/create.sh'
        env:
            RESOURCEGROUPNAME: ${{ vars.RESOURCEGROUPNAME }}
            STORAGEACCOUNTNAME: ${{ vars.STORAGEACCOUNTNAME }}
            STORAGECONTNAMEACR: ${{ vars.STORAGECONTNAMEACR }}
            STORAGECONTNAMEAKS: ${{ vars.STORAGECONTNAMEAKS }}
            LOCATION: ${{ vars.LOCATION }}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            bash $GITHUB_WORKSPACE/az-resources/create.sh

#...DeployACR...            
  DeployResourceACR:
    needs: DeployResourceAz
    name: Deploy Resource ACR
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with: 
          fetch-depth: 0
      - name: Replace Token in .tf
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '{'
          tokenSuffix: '}'
          files: 'terraform/acr/*.tf'
        env:
          ACRNAME: ${{ vars.ACRNAME }}
          RESOURCEGROUPNAME: ${{ vars.RESOURCEGROUPNAME }}
          STORAGEACCOUNTNAME: ${{ vars.STORAGEACCOUNTNAME }}
          STORAGECONTNAMEACR: ${{ vars.STORAGECONTNAMEACR }}
          LOCATION: ${{ vars.LOCATION }}
          vSubscriptionId: ${{ vars.VSUBSCRIPTIONID }}
          vClientId: ${{ vars.VCLIENTID }}
          vClientSecret: ${{ vars.VCLIENTSECRET }}
          vTenantId: ${{ vars.VTENANTID }}
  
      - name: Terraform init ACR
        uses: ahmedig/terraform-azurerm-backend@v4
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          resource_group_name: ${{ vars.RESOURCEGROUPNAME }}
          container_name: ${{ vars.STORAGECONTNAMEACR }}
          storage_account_name: ${{ vars.STORAGEACCOUNTNAME }}
          file_name: ${{ vars.STORAGEKEY }}
          subscription_id: ${{ vars.VSUBSCRIPTIONID }}
          tf_working_directory: ./terraform/acr
      - name: Terraform apply ACR
        run: terraform apply -auto-approve
        working-directory: ./terraform/acr

#...DeployAKS...
  DeployResourceAKS:
    needs: DeployResourceAz
    name: Deploy Resource AKS
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with: 
          fetch-depth: 0
      - name: Replace Token in .tf
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '{'
          tokenSuffix: '}'
          files: 'terraform/aks/*.tf'
        env:
          AKSNAME: ${{ vars.AKSNAME }}
          NAMESPACE: ${{ vars.NAMESPACE }}
          RESOURCEGROUPNAME: ${{ vars.RESOURCEGROUPNAME }}
          STORAGEACCOUNTNAME: ${{ vars.STORAGEACCOUNTNAME }}
          STORAGECONTNAMEACR: ${{ vars.STORAGECONTNAMEAKS }}
          LOCATION: ${{ vars.LOCATION }}
          vSubscriptionId: ${{ vars.VSUBSCRIPTIONID }}
          vClientId: ${{ vars.VCLIENTID }}
          vClientSecret: ${{ vars.VCLIENTSECRET }}
          vTenantId: ${{ vars.VTENANTID }}   
        
      - name: Terraform init AKS
        uses: ahmedig/terraform-azurerm-backend@v4
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          resource_group_name: ${{ vars.RESOURCEGROUPNAME }}
          container_name: ${{ vars.STORAGECONTNAMEAKS }}
          storage_account_name: ${{ vars.STORAGEACCOUNTNAME }}
          file_name: ${{ vars.STORAGEKEY }}
          subscription_id: ${{ vars.VSUBSCRIPTIONID }}
          tf_working_directory: ./terraform/aks
      - name: Terraform apply AKS
        run: terraform apply -auto-approve
        working-directory: ./terraform/aks
        
#...DeploySecret...        
  DeploySecret:
    needs: [DeployResourceACR, DeployResourceAKS]
    name: Secret
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
        with: 
          fetch-depth: 0

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          registry: acrjulianregistry.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}
          
      - name: Set Docker Config Variable
        run: |
          dockerconfig=$(base64 -w 0 ~/.docker/config.json)
          echo "ACR_VALUE=$dockerconfig" >> $GITHUB_ENV

      - name: Replace Token in secret.yml
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '{'
          tokenSuffix: '}'
          files: 'Secret/*.yaml'
        env:
          ACR_VALUE: ${{ env.ACR_VALUE }}
          NAMESPACE: ${{ vars.NAMESPACE }}
      
      - name: Show ACR_VALUE
        run: |  
          cat $GITHUB_WORKSPACE/Secret/secret.yaml
      
      - name: Get credentials and Apply Secret
        run: |
            az login --service-principal --tenant ${{ vars.VTENANTID }} --username ${{ vars.VCLIENTID }} --password ${{ vars.VCLIENTSECRET }}
            az aks get-credentials --resource-group ${{ vars.RESOURCEGROUPNAME }} --name ${{ vars.AKSNAME }} --overwrite-existing
            az aks show --resource-group resource-group-julian-david --name aksjulianr --query provisioningState
            kubectl apply -f $GITHUB_WORKSPACE/Secret/secret.yaml
